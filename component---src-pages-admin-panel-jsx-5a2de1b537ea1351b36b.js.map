{"version":3,"sources":["webpack:///./src/components/canvas/AdminPanelTableRender.jsx","webpack:///./src/pages/adminPanel.jsx"],"names":["AdminPanelTableRender","useState","fbData","setfbData","loadTables","useEffect","fetchData","a","firebase","database","ref","once","then","snapshot","val","result","load","ButtonItem","key","id","image","cursorImage","mode","tables","map","el","ind","TestCanvas"],"mappings":"4PA4CeA,G,UAnCe,WAAO,IAAD,EAENC,mBAAS,GAA9BC,EAF2B,KAEnBC,EAFmB,OAGCF,mBAAS,GAAvBG,GAHa,WAkBlC,OAbAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACKC,IAASC,WAAWC,IAAI,gBAAgBC,KAAK,SAASC,MAAK,SAACC,GAAD,OAAcA,EAASC,SADvF,OACVC,EADU,OAEhBZ,EAAUY,GAFM,2CAAH,qDAITC,EAAI,uCAAG,4BAAAT,EAAA,sEACUC,IAASC,WAAWC,IAAI,gBAAgBC,KAAK,SAASC,MAAK,SAACC,GAAD,OAAcA,EAASC,SAD5F,OACLC,EADK,OAEXX,EAAWW,GAFA,2CAAH,qDAIVT,IACAU,MACC,IAGD,oCACE,6BACGd,EAAU,kBAACe,EAAA,EAAD,CAAYC,IAAK,EAAGC,GAAI,EAAGC,MAAOlB,EAAOmB,YAAcC,KAAM,WACpE,OACHpB,EAASA,EAAOqB,OAAOC,KAAI,SAACC,EAAIC,GAAL,OAC1B,kBAACT,EAAA,EAAD,CAAYC,IAAKQ,EAAM,EAAGP,GAAIM,EAAGN,GAAIC,MAAOK,EAAGL,MAAOE,KAAM,cACzD,gBAEH,kBAACK,EAAA,EAAD,SC/BK,4BACb,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD","file":"component---src-pages-admin-panel-jsx-5a2de1b537ea1351b36b.js","sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useRef, useState } from 'react';\n// import * as PIXI from 'pixi.js';\nimport firebase from 'firebase/app';\nimport ButtonItem from './ButtonItem';\n// import AdminTableRender from './AdminTableRender';\nimport TestCanvas from './TestCanvas';\nimport 'firebase/database';\n\nconst AdminPanelTableRender = () => {\n\n  const [fbData, setfbData] = useState(0);\n  const [loadedTables, loadTables] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await firebase.database().ref('CanvasPreset').once('value').then((snapshot) => snapshot.val());\n      setfbData(result);\n    };\n    const load = async () => {\n      const result = await firebase.database().ref('saved-tables').once('value').then((snapshot) => snapshot.val());\n      loadTables(result);\n    };\n    fetchData();\n    load();\n  }, []);\n\n  return (\n    <>\n      <div>\n        {fbData ? (<ButtonItem key={0} id={0} image={fbData.cursorImage}  mode={'cursor'}/>\n        ) : 'help'}\n        {fbData ? fbData.tables.map((el, ind) => (\n          <ButtonItem key={ind + 1} id={el.id} image={el.image} mode={'create'}/>\n        )) : 'Loading Data'}\n      </div>\n          <TestCanvas />\n      {/* <div id=\"canvasWrapper\">\n        {document.getElementById('canvasWrapper') ? (<AdminTableRender />) : 'false'}\n      </div> */}\n    </>\n  );\n};\n\nexport default AdminPanelTableRender;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport '../styles/canvas.scss';\nimport AdminPanelTableRender from '../components/canvas/AdminPanelTableRender';\n\nexport default () => (\n  <>\n    <Layout>\n      <AdminPanelTableRender />\n    </Layout>\n  </>\n);\n"],"sourceRoot":""}