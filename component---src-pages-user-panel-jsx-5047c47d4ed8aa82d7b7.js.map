{"version":3,"sources":["webpack:///./src/pages/userPanel.jsx","webpack:///./src/components/canvas/UserTableRender.jsx","webpack:///./src/components/canvas/UserPanelTableRender.jsx"],"names":["localStorage","getItem","removeItem","userTableRender","bgImage","fbData","setTable","blockedTables","useState","answer","setData","loadedTables","loadTables","ref","useRef","useEffect","fetchData","a","storage","firebase","storageRef","child","getDownloadURL","then","result","load","database","once","snapshot","val","PIXI","isNode","require","console","log","app","Application","width","height","backgroundColor","current","appendChild","view","backgroundImage","Texture","from","background","Sprite","stage","addChild","screen","activeTable","map","el","container","Container","type","x","y","texture","table","index","id","uniqueId","info","anchor","set","scale","scaleX","scaleY","rotation","includes","buttonMode","interactive","tint","alpha","on","ev","target","forEach","discription","description","price","document","getElementById","innerHTML","text","Text","font","fill","align","cacheAsBitmap","errorMessage","createCanvas","userPanelTableRender","setfbData","style","display","flexDirection","UserTableRender","tables"],"mappings":"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","file":"component---src-pages-user-panel-jsx-5047c47d4ed8aa82d7b7.js","sourcesContent":["import React from 'react';\nimport Layout from '../components/layout';\nimport '../styles/canvas.scss';\nimport UserPanelTableRender from '../components/canvas/UserPanelTableRender';\n\nexport default () => (\n  <>\n    <Layout>\n      <UserPanelTableRender />\n    </Layout>\n  </>\n);\n","/* eslint-disable */\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\nimport isNode from 'detect-node'\r\n\r\nif (localStorage.getItem('state')) {\r\n   localStorage.removeItem('state')\r\n}\r\n\r\nconst userTableRender = ({ \r\n   bgImage, fbData, setTable, blockedTables\r\n   \r\n}) => { \r\n   const [answer, setData] = useState(0);\r\n   const [loadedTables, loadTables] = useState(0);\r\n   const ref = useRef(null)\r\n\r\n   useEffect(() => {\r\n      const fetchData = async () => {\r\n         const storage = firebase.storage();\r\n         const storageRef = storage.ref();\r\n         const imgURL = storageRef.child(`${bgImage}`);\r\n         // Get the download URL\r\n         imgURL.getDownloadURL().then((result) => {\r\n            setData(result);\r\n         });\r\n      };\r\n      const load = async () => {\r\n         const result = await firebase.database().ref('saved-tables').once('value').then((snapshot) => snapshot.val());\r\n         loadTables(result);\r\n      };\r\n      fetchData();\r\n      load();\r\n   }, []);\r\n\r\n   function createCanvas() {\r\n      let PIXI\r\n      if (!isNode) {\r\n         PIXI = require('pixi.js')\r\n      }\r\n      console.log(PIXI)\r\n      console.log('blockedTables: ', blockedTables);\r\n\r\n      const app = new PIXI.Application({\r\n         width: 1000,\r\n         height: 620,\r\n         backgroundColor: 0x5BBA6F,\r\n      });\r\n\r\n      ref.current.appendChild(app.view);\r\n\r\n      const backgroundImage = PIXI.Texture.from(answer);\r\n      const background = new PIXI.Sprite(backgroundImage);\r\n      app.stage.addChild(background);\r\n      background.width = app.screen.width;\r\n      background.height = app.screen.height;\r\n\r\n      if (loadedTables !== null) {\r\n         let activeTable;\r\n\r\n         loadedTables.map(el => {\r\n            const container = new PIXI.Container();\r\n            container.type = 'container'\r\n\r\n            container.x = el.x;\r\n            container.y = el.y;\r\n\r\n            const texture = PIXI.Texture.from(el.texture)\r\n            const table = new PIXI.Sprite(texture);\r\n            table.type = 'table'\r\n            table.index = el.index;\r\n            table.id = el.id\r\n            table.uniqueId = el.uniqueId\r\n            table.info = el.info;\r\n\r\n            table.anchor.set(0.5);\r\n            table.scale.x = el.scaleX;\r\n            table.scale.y = el.scaleY;\r\n            table.rotation = el.rotation;\r\n\r\n            if (blockedTables.includes(table.uniqueId)) {\r\n               table.buttonMode = false;\r\n               table.interactive = false;\r\n               table.tint = 0xcccccc;\r\n               table.alpha = 0.2;\r\n            } else {\r\n               table.buttonMode = true;\r\n               table.interactive = true;\r\n               table.tint = 0x808080;\r\n               table.alpha = 0.7;\r\n            }\r\n\r\n            container.addChild(table)\r\n\r\n            table\r\n               .on('pointertap', (ev) => {\r\n                  if (activeTable) {\r\n                     activeTable.tint = 0x808080;\r\n                     activeTable.alpha = 0.7;\r\n                  }\r\n                  activeTable = ev.target;\r\n                  activeTable.tint = 0xFFFFFF;\r\n                  activeTable.alpha = 1;\r\n\r\n                  fbData.forEach(el => {\r\n                     if (table.id === el.id) {\r\n                        const discription = el.description\r\n                        const price = el.price\r\n\r\n                        const tableInfo = document.getElementById('tableInfo')\r\n                        tableInfo.innerHTML = `\r\n                           <p>Table â„–:${table.index}</p>\r\n                           <p>Description:${discription}</p>\r\n                           <p>Table price:${price}</p>\r\n                        `;\r\n                     }\r\n                  })\r\n                  setTable( table.uniqueId )\r\n\r\n                  \r\n               });\r\n\r\n            const text = new PIXI.Text(el.index,\r\n               {\r\n                  font: '2rem',\r\n                  fill: 0x000000,\r\n                  align: 'center',\r\n                  cacheAsBitmap: true,\r\n               });\r\n            text.type = 'text'\r\n            text.anchor.set(0.5);\r\n            container.addChild(text);\r\n\r\n            app.stage.addChild(container)\r\n         })\r\n      } else {\r\n         const errorMessage = new PIXI.Text('Sorry, it is not possible to book a table at the moment. \\nPlease contact the administrator',\r\n            {\r\n               font: '2rem',\r\n               fill: 0xFFFFFF,\r\n               align: 'center',\r\n               cacheAsBitmap: true,\r\n            });\r\n         errorMessage.width = 800;\r\n         errorMessage.height = 150;\r\n         errorMessage.type = 'text'\r\n         errorMessage.anchor.set(0.5);\r\n         errorMessage.x = app.screen.width / 2;\r\n         errorMessage.y = app.screen.height / 2;\r\n\r\n         background.tint = 0x979797;\r\n\r\n         background.addChild(errorMessage)\r\n      }\r\n\r\n\r\n\r\n      \r\n         \r\n      \r\n   }\r\n\r\n   if (answer !== 0 && loadedTables !== 0) {\r\n      createCanvas()\r\n   }\r\n\r\n      return <>\r\n         <div ref={ref}></div>\r\n      </>;\r\n   \r\n};\r\n\r\nexport default userTableRender;\r\n","/* eslint-disable */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport UserTableRender from './UserTableRender';\r\nimport 'firebase/database';\r\n\r\nconst userPanelTableRender = ({\r\n   setTable, blockedTables\r\n}) => {\r\n\r\n   const [fbData, setfbData] = useState(0);\r\n\r\n   useEffect(() => {\r\n      const fetchData = async () => {\r\n         const result = await firebase.database().ref('CanvasPreset').once('value').then((snapshot) => snapshot.val());\r\n         setfbData(result);\r\n      };\r\n      fetchData();\r\n   }, []);\r\n\r\n   return (\r\n      <div style={{ display:'flex', flexDirection:'row' }}>\r\n            {fbData ? <UserTableRender bgImage={fbData.bgImage} fbData={fbData.tables} setTable={setTable} blockedTables={blockedTables}/> :'false'}\r\n         <div>\r\n            <div id=\"tableInfo\">\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default userPanelTableRender;"],"sourceRoot":""}